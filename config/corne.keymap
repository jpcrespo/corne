/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;
    // 21 backlight + 6 glowlight
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
&kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
&kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
&kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
               &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | F1 | F2 | F3 | F4 | F5 | F6 |               | F7 | F8 | F9 | F10 | F11 | F12 |
// | ` | 1 | 2 | 3 | 4 | 5 |                     | 6 | 7 | 8 | 9 | 0 | = |
// | SHFT | BT1 | BT2 | BT3 | BT4 | BT_CLR |     | LFT | DWN | UP | RGT | < | > |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
    &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
    &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp EQUAL
    &kp LSHFT &bt BT_SEL 0&bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR   &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp LT &kp GT
               &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp LALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | &mt LALT LSHIFT &kp N | ! | @ | # | $ | % |                                        | ^ | & | * | ( | ) | BKSP |
// | Vol_up | Vol_dn | PP | next | prev | PSCRN |                   | - | = | [ | ] | \ | ` |
// | rgb_up | rgb_dn | rgb_hui | rgb_hud | rgb_eff | rgb_spd |      | _ | + | { | } | "|" | ~ |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                    bindings = <
    &macro_press &kp LGUI &kp T &macro_wait 50 &kp E &macro_wait 50 &kp R &macro_wait 50 &kp M &macro_wait 50 &kp I &macro_wait 50 &kp N &macro_wait 50 &kp A &macro_wait 50 &kp L &macro_wait 50 &kp RET
    &macro_press &kp LGUI &kp O &kp B &kp S &kp I &kp D &kp I &kp A &kp N &kp RET
    &macro_press &kp LGUI &kp T &kp E &kp L &kp E &kp G &kp R &kp A &kp M &kp RET
    &macro_press &kp LGUI &kp G &kp I &kp T &kp RET
    &macro_press &kp LGUI &kp B &kp R &kp A &kp V &kp E &kp RET
    &macro_press &kp LGUI &kp C &kp C &kp L &kp E &kp A &kp N &kp E &kp R &kp RET
    &macro_press &kp LALT &kp LSHFT &kp N
    &macro_press &kp LGUI &kp LSHFT &kp S
    &macro_press &kp LGUI &kp L    
    &macro_press &kp LGUI &kp M &kp I &kp P &kp C &kp RET
    &kp PSCRN &kp BSPC
    &kp C_VOL_UP &kp C_VOL_DN &kp C_PP &kp C_NEXT &kp C_PREV &kp C_MUTE &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
    &rgb_ug RGB_BRI &rgb_ug  RGB_BRD  &rgb_ug  RGB_HUI &rgb_ug  RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_SPD   &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                          &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
