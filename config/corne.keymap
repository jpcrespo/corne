/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;
    // 21 backlight + 6 glowlight
};



/ {
macros {
    open_terminal: open_terminal {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>; // No se requieren parámetros adicionales
        wait-ms = <10>; // Tiempo de espera entre pulsaciones, ajustable si es necesario
        bindings
            = <&macro_tap &kp LGUI>   // Presiona la tecla Windows/GUI
            , <&macro_tap &kp T &kp E &kp R &kp M &kp I &kp N &kp A &kp L> // Escribe "TERMINAL"
            , <&macro_wait_time 10>  // Espera antes de presionar Enter
            , <&macro_tap &kp RET>;   // Presiona Enter
    };

   open_brave: open_brave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; 
            wait-ms = <10>; 
            bindings
                = <&macro_tap &kp LGUI>   
                , <&macro_tap &kp B &kp R &kp A &kp V &kp E> // Escribe "BRAVE"
                , <&macro_wait_time 10>  
                , <&macro_tap &kp RET>;   
   };
   open_telegram: open_telegram {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>; 
        wait-ms = <10>; 
        bindings
           = <&macro_tap &kp LGUI>   
           , <&macro_tap &kp T &kp E &kp L &kp E &kp G &kp R &kp A &kp M> // Escribe "TELEGRAM"
           , <&macro_wait_time 10>  
           , <&macro_tap &kp RET>;   
   };

   screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; 
            wait-ms = <10>; 
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp LSHIFT>
                , <&macro_tap &kp S>
                , <&macro_release &kp LGUI>
                , <&macro_release &kp LSHIFT>;
        };

   lock_screen: lock_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // No se requieren parámetros adicionales
            wait-ms = <10>; // Tiempo de espera entre pulsaciones, ajustable si es necesario
            bindings
                = <&macro_press &kp LGUI>   // Presiona la tecla Windows/GUI
                , <&macro_tap &kp L>
                , <&macro_release &kp LGUI>;     // Presiona la tecla L
        };

   obsidian: obsidian {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>; 
        wait-ms = <10>; 
        bindings
           = <&macro_tap &kp LGUI>   
           , <&macro_tap &kp O &kp B &kp S> // Escribe "GIT"
           , <&macro_wait_time 10>  
           , <&macro_tap &kp RET>;   
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |



                        bindings = <
&kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
&kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
               &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {



// -----------------------------------------------------------------------------------------
// | ESC  | 7 | 8 | 9 | BrilloT- | BrilloT+ |           | F1 | F2 | F3 | F4 | F5 | F11 |
// | TAB  | 4 | 5 | 6 | BrilloP- | BrilloP+ |           | LFT | DWN | UP | RGT | PGDN | PGUP |
// | SHFT | 1 | 2 | 3 | Vol+     | Vol-     |           | BT_CLR | BT1 | BT2 | BT3 | prev | next |
//                          | 0 |     | SPC |           | ENT |     | ALT |



                        bindings = <
    &kp ESC   &kp N7 &kp N8 &kp N9 &rgb_ug RGB_BRD &rgb_ug RGB_BRI      &kp F1     &kp F2       &kp F3       &kp F4        &kp F5 &kp F11
    &kp TAB   &kp N4 &kp N5 &kp N6 &kp C_BRI_DN    &kp C_BRI_UP         &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT     &kp PGDN &kp PGUP
    &kp LSHFT &kp N1 &kp N2 &kp N3 &kp C_VOL_DN    &kp C_VOL_UP         &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &kp C_PREV &kp C_NEXT
                                     &kp N0 &trans &kp C_PP             &kp C_MUTE &trans &kp LALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | ` | 1 | 2 | 3 | 4 | 5 |                                        | 6 | 7 | 8 | 9 | 0 | DEL |
// | terminal | brave | telegram | obsidian | ss      | ls      |   | - | = | [ | ] | \ | ` |
// | rgb_up | rgb_dn | rgb_hui | rgb_hud    | rgb_eff | rgb_spd |   | _ | + | { | } | "|" | ~ |
//                                        | SHFT |    | SPC     |   | ENT |     | ALT |


                    bindings = <
    &kp GRAVE       &kp N1           &kp N2          &kp N3          &kp N4          &kp N5               &kp N6     &kp N7    &kp N8    &kp N9    &kp N0 &kp BSPC
    &open_terminal  &open_brave      &open_telegram  &obsidian       &screenshot     &lock_screen         &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
    &kp LSHFT       &rgb_ug RGB_HUI &rgb_ug RGB_SAI  &rgb_ug RGB_EFF &rgb_ug RGB_SPI &rgb_ug RGB_SPD      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                                                                       &trans &trans &kp SPACE            &kp RET &trans &kp RALT
                        >;
                };
        };
};
