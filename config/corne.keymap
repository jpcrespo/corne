/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;
    // 21 backlight + 6 glowlight
};


/ {
  combos {
    compatible = "zmk,combos";

    combo_bt_clear {
      timeout-ms = <20>;                 // ventana para pulsar ambos (ajusta 20–50 ms según comodidad)
      layers = <1>;                      // activo solo en la capa 1 (lower_layer)
      key-positions = <30 31>;           // posiciones de C_PREV y C_NEXT
      bindings = <&bt BT_CLR>;           // acción: borrar emparejamientos BLE
    };
  };
};

/ {
macros {
   screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; 
            wait-ms = <10>; 
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp LSHIFT>
                , <&macro_tap &kp S>
                , <&macro_release &kp LGUI>
                , <&macro_release &kp LSHIFT>;
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

                        bindings = <
&kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
&kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
&kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp LSHFT
               &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT 

                        >;
                };
                lower_layer {

// -----------------------------------------------------------------------------------------
// | ESC  | 7 | 8 | 9 | BrilloT- | BrilloT+ |           | F1 | F2 | F3 | F4 | F5 | F11 |
// | LSHFT  | 4 | 5 | 6 | BrilloP- | BrilloP+ |           | LFT | DWN | UP | RGT | PGDN | PGUP |
// | LCTRL | 1 | 2 | 3 | Vol-     | Vol+     |           | prev | next | BT0 | BT1 | BT2 | DEL |
//                          | 0 |     | PLAY |           | MUTE |     | ALT |

                        bindings = <
    &kp ESC    &kp N7 &kp N8 &kp N9  &rgb_ug RGB_BRD   &rgb_ug RGB_BRI      &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F11
    &kp LSHFT  &kp N4 &kp N5 &kp N6  &kp C_BRI_DN      &kp C_BRI_UP         &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp PGDN  &kp PGUP
    &kp LCTRL  &kp N1 &kp N2 &kp N3  &kp C_VOL_DN      &kp C_VOL_UP         &kp C_PREV &kp C_NEXT &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &kp DEL
                                   &kp N0   &trans    &kp C_PP             &kp C_MUTE &trans    &kp LALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | `  | 1 | 2 | 3 | 4 | 5 |                                        | 6 | 7 | 8 | 9 | 0 | DEL |
// | terminal | brave | telegram | obsidian | ss      | ls      |   | - | = | [ | ] | \ | ` |
// | shift | rgb_hui | rgb_sai | rgb_eff    | rgb_spd | rgb_spi |   | _ | + | { | } | "|" | ~ |
//                                        | TOG |    | SPC     |   | ENT |     | ALT |




                    bindings = <
    &kp GRAVE     &kp N1           &kp N2          &kp N3          &kp N4          &kp N5               &kp N6     &kp N7    &kp N8    &kp N9    &kp N0 &kp DEL
    &kp LSHFT     &rgb_ug RGB_HUI &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD     &trans       &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
    &kp LCTRL     &rgb_ug RGB_VAI &rgb_ug RGB_VAD  &trans &trans &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                                                                       &rgb_ug RGB_TOG &trans &kp SPACE            &rgb_ug RGB_EFF &trans &kp RALT
                        >;
                };
        };
};
